{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"nam",
				"nameIdx"
			],
			[
				"ava",
				"availableRandomNames"
			],
			[
				"to",
				"toPlay"
			],
			[
				"wi",
				"winner_score"
			],
			[
				"winn",
				"winner_name"
			],
			[
				"win",
				"winner_name"
			],
			[
				"l",
				"length"
			],
			[
				"num",
				"numEmpty"
			],
			[
				"plus",
				"plusBuys"
			],
			[
				"Play",
				"PlayerBasicAI"
			],
			[
				"get",
				"getAvailableActions"
			],
			[
				"name",
				"nameIdx"
			],
			[
				"fin",
				"findEmptySupplyPile"
			],
			[
				"suppl",
				"supply_pile"
			],
			[
				"su",
				"supplyPiles"
			],
			[
				"s",
				"supply_pile"
			],
			[
				"money",
				"moneySpent"
			],
			[
				"card",
				"card_name"
			],
			[
				"sup",
				"supply_pile"
			],
			[
				"car",
				"card_name"
			],
			[
				"mo",
				"moveCards"
			],
			[
				"play",
				"playAction"
			],
			[
				"por",
				"prototype"
			],
			[
				"pl",
				"plusBuys"
			],
			[
				"in",
				"inPlay"
			],
			[
				"has",
				"hasActionsInHand"
			],
			[
				"draw",
				"drawCards"
			],
			[
				"co",
				"console"
			],
			[
				"ca",
				"cardDefs"
			],
			[
				"startin",
				"starting_deck"
			],
			[
				"clo",
				"cloneCardFromPile"
			],
			[
				"is",
				"isAttack"
			],
			[
				"isTre",
				"isTreasure"
			],
			[
				"proto",
				"prototype"
			],
			[
				"available",
				"availableActions"
			],
			[
				"exi",
				"existingPlayers"
			],
			[
				"ex",
				"existingPlayers"
			],
			[
				"player",
				"playerToLift"
			],
			[
				"move",
				"move_dirs"
			],
			[
				"getTio",
				"getTilesForNavigateRecursive"
			],
			[
				"clea",
				"clearActionClicked"
			],
			[
				"getN",
				"getNavigatedPlayer"
			],
			[
				"setA",
				"setActiveActions"
			],
			[
				"star",
				"starting_navigations"
			],
			[
				"sh",
				"shouldClearActionClicked"
			],
			[
				"nav",
				"navigations_left"
			],
			[
				"getNavigat",
				"getNavigationsLeft"
			],
			[
				"n",
				"navigated_player"
			],
			[
				"navi",
				"navigations_left"
			],
			[
				"curr",
				"curr_player_job"
			],
			[
				"cur",
				"currentAction"
			],
			[
				"clear",
				"clearAvailableActions"
			],
			[
				"tile",
				"tileTreasure"
			],
			[
				"back",
				"background-color"
			],
			[
				"remove",
				"removeClass"
			],
			[
				"moveP",
				"movePlayerToTile"
			],
			[
				"lsit-",
				"list-style-type"
			],
			[
				"curre",
				"current_player_idx"
			],
			[
				"data",
				"data-player-start"
			],
			[
				"tr",
				"treasure"
			],
			[
				"score",
				"scorebody"
			],
			[
				"sc",
				"scorehead"
			],
			[
				"tre",
				"treasures"
			],
			[
				"create",
				"createScoreRow"
			],
			[
				"num_",
				"num_treasures"
			],
			[
				"flood",
				"flood_cards"
			],
			[
				"floo",
				"flood_cards"
			],
			[
				"treas",
				"treasure_cards"
			],
			[
				"trea",
				"treasure_cards"
			],
			[
				"pro",
				"prototype"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/RightMovement.js",
			"settings":
			{
				"buffer_size": 503,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"package control",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/tfendall/Documents/GitHub/haircutsalad/Assets"
	],
	"file_history":
	[
		"/C/Users/tfendall/Documents/GitHub/haircutsalad/haircutsalad.sublime-project",
		"/C/Users/tfendall/Documents/GitHub/haircutsalad/Assets/LeftMovement.js",
		"/C/Program Files/Sublime Text 3/changelog.txt",
		"/C/Users/tfendall/Documents/GitHub/dominionjs/.gitignore",
		"/C/Users/tfendall/AppData/Roaming/Sublime Text 3/Packages/User/JavaScript.sublime-settings",
		"/C/Users/tfendall/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/tfendall/Documents/GitHub/dominionjs/card.js",
		"/C/Users/tfendall/Documents/GitHub/dominionjs/dominion.sublime-project",
		"/C/Users/tfendall/Documents/GitHub/dominionjs/Preferences.sublime-settings",
		"/E/dev/games/javascript/forbidden island/player.js",
		"/E/dev/games/javascript/forbidden island/util.js",
		"/E/dev/games/javascript/forbidden island/cards.js",
		"/E/dev/games/javascript/forbidden island/board.js",
		"/E/dev/games/javascript/forbidden island/forbidden_island.css",
		"/E/dev/games/javascript/forbidden island/forbidden.html",
		"/E/dev/games/javascript/forbidden island/forbidden island.sublime-project",
		"/E/dev/games/javascript/forbidden island/Preferences.sublime-settings",
		"/E/dev/games/javascript/forbidden.html",
		"/E/dev/bones wordpress db info"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"PlayerBasicAI",
			"    \n",
			"playCard",
			"card_def",
			"\\t",
			"};\n",
			"card_def",
			"\n  ",
			"  \n",
			"copy",
			"\\t",
			"getTileInDir",
			"setActiveActions",
			"TREASURE_COST",
			"hideActionsE",
			"getTilesForNavigation",
			"nav-players",
			"setActiveActions",
			"hasPerformedShoreUpThisRound",
			"              \n",
			"STARTING_SHORE_UPS",
			"STARTING_NAVIGATIONS",
			"\n  ",
			"nav-players",
			"setupN",
			"nav-player",
			"          \n",
			"ul",
			"          \n",
			"getTileInDir(",
			"getTileInDir(player",
			"getTileInDir",
			"player_div",
			"doMove",
			"/*\n          var player = getCurrentPlayer();\n          if (player.getCurrentAction() === 'move') {\n            board.clearAvailableActions();\n            player.changeAction('');\n          } else {\n            player.changeAction('move');\n            board.setAvailableActions(board.getTilesForMove(getCurrentPlayer()));\n          }\n          board.updateScorecard(players, curr_player);\n*/",
			"\n          var player = getCurrentPlayer();\n          if (player.getCurrentAction() === 'move') {\n            board.clearAvailableActions();\n            player.changeAction('');\n          } else {\n            player.changeAction('move');\n            board.setAvailableActions(board.getTilesForMove(getCurrentPlayer()));\n          }\n          board.updateScorecard(players, curr_player);",
			">\n",
			"\"></",
			"setActiveActions",
			"setAvailableActions",
			"setAva",
			"shore",
			"getTileInDir",
			"doMove",
			"console",
			"doMove",
			"#actions",
			"getTileInDir",
			">\n",
			"div",
			"updateScorecard",
			"\\t",
			"#context",
			"#cont",
			"this.",
			"board_def",
			"tiles_def",
			"$board",
			"\\t",
			"tr",
			"$headrow",
			"'id': [0-9]{1,2},[ ]{1,2}",
			"\\t",
			"  	  	  \n",
			"		  	\n",
			"  	  	\n",
			"  	      	\n",
			"\n        ",
			"        \n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"PlayerRandomAI",
			"  ",
			"    ",
			"starting_shore_ups",
			"starting_navigations",
			"getTileInDir(player.x, player.y",
			"doAction",
			"setActiveActions",
			"li",
			"  ",
			"td",
			"$row",
			"  "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/RightMovement.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 503,
						"regions":
						{
						},
						"selection":
						[
							[
								501,
								501
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "haircutsalad.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 222.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
